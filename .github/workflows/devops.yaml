name: Build and Deploy

on: 
  push:
    branches:
      - master

jobs: 
  build-scan:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        # use something repeatable (i.e. specific version/SHA)
        uses: actions/checkout@master

      # build and push image to test registry
      - run: docker build --tag ideal-happiness-test:latest .
      - name: Push to ECR
        uses: jwalton/gh-ecr-push@v1
        with:
          access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: us-east-2
          image: ideal-happiness-test:latest

      # scan image with smartcheck
      - name: Deep Security Smart Check
        uses: ./.github/actions/smart-check-scan-action
        with:
            # Mandatory
            DSSC_IMAGE_NAME: 749472149179.dkr.ecr.us-east-2.amazonaws.com/ideal-happiness-test:latest
            DSSC_SMARTCHECK_HOST: ${{ secrets.DSSC_SMARTCHECK_HOST }}
            DSSC_SMARTCHECK_USER: ${{ secrets.DSSC_SMARTCHECK_USER }}
            DSSC_SMARTCHECK_PASSWORD: ${{ secrets.DSSC_SMARTCHECK_PASSWORD }}
            DSSC_IMAGE_PULL_AUTH: ${{ secrets.AWS_ECR_IMAGE_PULL_AUTH }}
            DSSC_FINDINGS_THRESHOLD: {"malware": 0,"vulnerabilities": {"defcon1": 0,"critical": 0,"high": 0},"contents": {"defcon1": 0,"critical": 0,"high": 0},"checklists": {"defcon1": 0,"critical": 0,"high": 0}}

      # push image to real registry if scan completes
      - run: docker build --tag ideal-happiness:latest .
      - name: Push to ECR
        uses: jwalton/gh-ecr-push@v1
        with:
          access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: us-east-2
          image: ideal-happiness:latest
